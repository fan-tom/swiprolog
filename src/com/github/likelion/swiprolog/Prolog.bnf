{
  parserClass="com.github.likelion.swiprolog.parser.PrologParser"
  parserUtilClass="com.github.likelion.swiprolog.parser.PrologParserUtil"
  parserUtilClass="com.github.likelion.swiprolog.parser.PrologParserUtil"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Prolog"
  psiImplClassSuffix="Impl"
  psiPackage="com.github.likelion.swiprolog.psi"
  psiImplPackage="com.github.likelion.swiprolog.psi.impl"
  psiImplUtilClass="com.github.likelion.swiprolog.psi.impl.PrologPsiImplUtil"

  elementTypeHolderClass="com.github.likelion.swiprolog.psi.PrologTypes"
  elementTypeClass="com.github.likelion.swiprolog.psi.PrologElementType"
  tokenTypeClass="com.github.likelion.swiprolog.psi.PrologTokenType"

  tokens = [
    DOT = "."
    IMPLIES = ":-"
    COMMA = ","
    LPAREN = "("
    RPAREN = ")"
    TRUE = "true"
    FALSE = "false"
    FAIL = "fail"
    CUT = "!"
    LBRACKET = "["
    RBRACKET = "]"
    COLON = ":"
    PIPE = "|"

    COMMENT = 'regexp:(%[^\r\n]*)|(/\*([^\*]|\*[^/]|\n)*\*/)'
    FUNCTION = 'regexp:abort|min'
    IDENTIFIER = 'regexp:[a-z][a-zA-Z0-9_]*'
    VAR = 'regexp:[A-Z_][a-zA-Z0-9_]*'
    STRING = "regexp:('([^'\\]|\\.)*'|\"([^\"\\]|\\\"|\\\'|\\)*\")"
    NUMBER = 'regexp:0|[1-9][0-9]*(\.[0-9]+)?(E(\+|\-)?[0-9]+)?'

  ]

}

prologFile ::= statement_*

private statement_ ::= (fact|clause|instruction|COMMENT)

fact ::= predicate DOT

clause ::= predicate IMPLIES bodypredicate ( COMMA bodypredicate )* DOT

instruction ::= IMPLIES bodypredicate DOT

bodypredicate ::= predicate | TRUE | FALSE | FAIL | CUT

predicate ::= /*FUNCTION*/ [ IDENTIFIER COLON ] IDENTIFIER [ LPAREN arglist RPAREN ]

arglist ::= arg ( COMMA arg )*

arg ::= predicate | VAR | literal | list

literal ::= STRING | NUMBER

list ::= LBRACKET [ elementlist ] RBRACKET

elementlist ::= element ( ( PIPE elementlist ) | ( COMMA element )* )

element ::= predicate | VAR | literal

//private s ::= KEYWORD|LIST|OPERATOR|BOOLEAN|SEPARATOR|VAR|IDENTIFIER|NUMBER|WHITE_SPACE|STRING
/*
OPERATOR = "?" | "/" | "*" | "-" | "+" | "@" | "#" | "$" | "%" | "^" | "\\"
BOOLEAN = "<" | ">" | "=" | "," | ";" | "&" | "~" | "|"
SEPARATOR =  "{" | "}"
*/